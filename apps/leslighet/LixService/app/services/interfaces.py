from typing import Dict, List, Any, Protocol, Optional

class TextParser(Protocol):
    """Interface for text parsing operations."""
    def split_words(self, text: str) -> List[str]: ...
    def split_sentences(self, text: str) -> List[str]: ...
    def split_paragraphs(self, text: str) -> List[str]: ...


class ReadabilityMetric(Protocol):
    """Interface for readability metrics."""
    def compute(self, words: List[str], sentence_count: int) -> float: ...
    def classify(self, score: float) -> Dict[str, Any]: ...


class WordAnalyzer(Protocol):
    """Interface for analyzing words."""
    def get_long_words(self, words: List[str], min_length: float = 6.9) -> List[str]: ...
    def analyze_word(self, word: str, index: int, sentence_index: int, position_in_sentence: int, word_frequency: Dict[str, int]) -> Dict[str, Any]: ...


class SentenceAnalyzer(Protocol):
    """Interface for analyzing sentences."""
    def analyze_sentence(self, sentence: str, sentence_index: int, words: Optional[List[str]] = None) -> Dict[str, Any]: ...