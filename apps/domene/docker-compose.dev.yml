services:
  domain-monitor-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: domain-monitor:dev
    container_name: domain-monitor-dev
    restart: unless-stopped
    ports:
      - "3001:3001"  # API port
      - "3002:3002"  # WebSocket port
    volumes:
      - ./:/usr/src/app  # Mount entire project for development
      - /usr/src/app/node_modules  # Prevent mounting host node_modules
    environment:
      - NODE_ENV=development
      - DEBUG_MODE=true
      - LOG_LEVEL=debug
      - REPOSITORY_TYPE=mongodb
      - MONGO_CONNECTION_STRING=mongodb://admin:password@mongo:27017/domain_monitor?authSource=admin
      - REDIS_ENABLED=true
      - REDIS_HOST=redis
    networks:
      - domain-monitor-network
    depends_on:
      - mongo
      - redis
    command: npm run dev

  mongo:
    image: mongo:6
    container_name: domain-monitor-mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - domain-monitor-network

  mongo-express:
    image: mongo-express:latest
    container_name: domain-monitor-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
    networks:
      - domain-monitor-network
    depends_on:
      - mongo

  redis:
    image: redis:7-alpine
    container_name: domain-monitor-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - domain-monitor-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: domain-monitor-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    networks:
      - domain-monitor-network
    depends_on:
      - redis

volumes:
  mongo-data:
  redis-data:

networks:
  domain-monitor-network:
    driver: bridge